name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Run when tag matches v*, i.e. v1.0.0, v0.1.0

permissions:
  contents: write
  id-token: write  # Required for trusted publishing to PyPI
  
jobs:
  build-and-publish:
    name: Build and Publish Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # We need the full history for the changelog
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel twine
        pip install -e .
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    
    - name: Generate Release Notes
      id: changelog
      run: |
        echo "# Release v${{ env.VERSION }}" > RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## What's Changed" >> RELEASE_NOTES.md
        git log --pretty=format:"* %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD | grep -v "Merge pull request" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Security" >> RELEASE_NOTES.md
        echo "This release is cryptographically signed using the project's secure release system." >> RELEASE_NOTES.md
        echo "Signature files (.sig) and SHA256 checksums are provided for all artifacts." >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Verification" >> RELEASE_NOTES.md
        echo "To verify the integrity of the packages:" >> RELEASE_NOTES.md
        echo '```bash' >> RELEASE_NOTES.md
        echo "# Verify checksums" >> RELEASE_NOTES.md
        echo "sha256sum -c SHA256SUMS.txt" >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "# Verify signature (requires the dependency-risk-profiler package)" >> RELEASE_NOTES.md
        echo "python -m dependency_risk_profiler.secure_release.code_signing package.whl --verify package.whl.sig" >> RELEASE_NOTES.md
        echo '```' >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 HEAD^)...v${{ env.VERSION }}" >> RELEASE_NOTES.md
        cat RELEASE_NOTES.md
    
    - name: Build package
      run: |
        python -m build
        twine check dist/*
        
    - name: Sign package artifacts
      run: |
        echo "Signing release artifacts..."
        # Import the secure_release module for code signing
        python -c "
        from dependency_risk_profiler.secure_release.code_signing import sign_artifact, SigningMode
        import glob
        import os
        
        # Sign each artifact
        for artifact in glob.glob('dist/*.tar.gz') + glob.glob('dist/*.whl'):
            print(f'Signing {artifact}')
            signature_path = artifact + '.sig'
            signature_info = sign_artifact(
                artifact, 
                '${{ github.run_id }}', 
                SigningMode.RELEASE, 
                output_path=signature_path,
                log_file='dist/signing.log'
            )
            print(f'Created signature: {signature_path}')
        "
        # Create a SHA256 checksum file
        cd dist && sha256sum *.tar.gz *.whl > SHA256SUMS.txt
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release v${{ env.VERSION }}
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
        files: |
          dist/*.tar.gz
          dist/*.whl
          dist/*.sig
          dist/SHA256SUMS.txt
          dist/signing.log
    
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true
        verbose: true
    
    - name: Build docs
      run: |
        pip install -e ".[docs]"
        mkdocs build
    
    - name: Deploy docs
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: site
        branch: gh-pages
        clean: true