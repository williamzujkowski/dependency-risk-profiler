name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Run when tag matches v*, i.e. v1.0.0, v0.1.0

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # We need the full history for the changelog
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel twine
        pip install github-changelog-generator
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    
    - name: Generate changelog
      run: |
        github-changelog-generator --future-release v${{ env.VERSION }} --output CHANGELOG.md
      env:
        CHANGELOG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build package
      run: |
        python -m build
        twine check dist/*
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release v${{ env.VERSION }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/*
        asset_name: dependency-risk-profiler-${{ env.VERSION }}.tar.gz
        asset_content_type: application/gzip
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}